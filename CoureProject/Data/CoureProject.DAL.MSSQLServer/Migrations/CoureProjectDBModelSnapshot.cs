// <auto-generated />
using System;
using CoureProject.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CoureProject.DAL.SQLiteServer.Migrations
{
    [DbContext(typeof(CoureProjectDB))]
    partial class CoureProjectDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.4");

            modelBuilder.Entity("CoureProject.Domain.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("WeatherID")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("CoureProject.Domain.Parent", b =>
                {
                    b.Property<string>("latt_long")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("location_type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("woeid")
                        .HasColumnType("INTEGER");

                    b.ToTable("Parents");
                });

            modelBuilder.Entity("CoureProject.Domain.Source", b =>
                {
                    b.Property<int>("crawl_rate")
                        .HasColumnType("INTEGER");

                    b.Property<string>("slug")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.ToTable("Sources");
                });

            modelBuilder.Entity("CoureProject.Domain.Weather", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("air_pressure")
                        .HasColumnType("REAL");

                    b.Property<DateOnly>("applicable_date")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("created")
                        .HasColumnType("TEXT");

                    b.Property<double>("humidity")
                        .HasColumnType("REAL");

                    b.Property<double>("max_temp")
                        .HasColumnType("REAL");

                    b.Property<double>("min_temp")
                        .HasColumnType("REAL");

                    b.Property<double>("predictability")
                        .HasColumnType("REAL");

                    b.Property<double>("the_temp")
                        .HasColumnType("REAL");

                    b.Property<double>("visibility")
                        .HasColumnType("REAL");

                    b.Property<string>("weather_state_abbr")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("weather_state_name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("wind_direction")
                        .HasColumnType("REAL");

                    b.Property<string>("wind_direction_compass")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("wind_speed")
                        .HasColumnType("REAL");

                    b.HasKey("id");

                    b.ToTable("Weathers");
                });
#pragma warning restore 612, 618
        }
    }
}
